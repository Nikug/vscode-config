{
  // General settings
  "editor.formatOnSave": true,
  "terminal.integrated.scrollback": 5000,
  "editor.fontSize": 17,
  "editor.tabSize": 2,
  "workbench.editor.enablePreview": false,
  "editor.lineNumbers": "relative",
  "editor.minimap.enabled": false,
  "editor.fontLigatures": true,
  "workbench.colorTheme": "Catppuccin Mocha",
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "liveServer.settings.fullReload": true,
  "editor.bracketPairColorization.enabled": true,
  "git.enableSmartCommit": true,
  // Terminal settings
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.profiles.windows": {
    "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe (migrated)": {
      "path": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
      "args": []
    }
  },
  // Language settings
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // Emmet settings
  "emmet.extensionsPath": ["C:/Users/nikgro/Documents/repos/emmet"],
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact"
  },
  "emmet.excludeLanguages": ["markdown"],
  "emmet.triggerExpansionOnTab": true,
  "emmet.showSuggestionsAsSnippets": true,
  // Vim settings
  "vim.sneak": false,
  "vim.sneakReplacesF": false,
  "vim.useSystemClipboard": false,
  "vim.leader": "<space>",
  "vim.timeout": 30000,
  "vim.scrolloff": 10,
  "vim.normalModeKeyBindings": [
    // Tab controls (t)
    {
      // New empty tab
      "before": ["<Leader>", "t", "n"],
      "commands": [":tabnew"]
    },
    {
      // Move to right tab
      "before": ["<Leader>", "l"],
      "commands": [":tabnext"]
    },
    {
      // Move to left tab
      "before": ["<Leader>", "h"],
      "commands": [":tabprev"]
    },
    {
      // Close all other tabs in window
      "before": ["<Leader>", "t", "o"],
      "commands": [":tabo"]
    },
    {
      // Close tab
      "before": ["<leader>", "t", "k"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      // Move tab to right window
      "before": ["<Leader>", "t", "L"],
      "commands": ["workbench.action.moveEditorToNextGroup"]
    },
    {
      // Move tab to left window
      "before": ["<Leader>", "t", "H"],
      "commands": ["workbench.action.moveEditorToPreviousGroup"]
    },
    // Command controls (leader)
    {
      // Open file
      "before": ["<leader>", "<leader>"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      // Open recent 
      "before": ["<leader>", "b"],
      "commands": ["workbench.action.quickOpenLeastRecentlyUsedEditor"]
    },
    {
      // Run command
      "before": ["<leader>", ":"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      // Find symbol
      "before": ["<leader>", ";"],
      "commands": ["workbench.action.showAllSymbols"]
    },
    {
      // Open search
      "before": ["<leader>", "/"],
      "commands": ["workbench.action.quickTextSearch"]
    },
    // Toggling view stuff (v)
    {
      // Toggle sidebar
      "before": ["<leader>", "v", "s"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      // Toggle panel (terminal)
      "before": ["<leader>", "v", "p"],
      "commands": ["workbench.action.togglePanel"]
    },
    // Files (f)
    {
      // Show file in sidebar
      "before": ["<leader>", "f", "v"],
      "commands": ["workbench.files.action.showActiveFileInExplorer"]
    },
    {
      // Show file in sidebar
      "before": ["<leader>", "v", "f"],
      "commands": ["workbench.files.action.showActiveFileInExplorer"]
    },
    {
      // Save file
      "before": ["<leader>", "f", "s"],
      "commands": ["workbench.action.files.save"]
    },
    {
      // Save file without formatting
      "before": ["<leader>", "f", "w"],
      "commands": ["workbench.action.files.saveWithoutFormatting"]
    },
    {
      // Save file as
      "before": ["<leader>", "f", "S"],
      "commands": ["workbench.action.files.saveAs"]
    },
    {
      // Save all files
      "before": ["<leader>", "f", "a"],
      "commands": ["workbench.action.files.saveAll"]
    },
    {
      // New empty file
      "before": ["<leader>", "f", "n"],
      "commands": ["workbench.action.files.newUntitledFile"]
    },
    {
      // Format file
      "before": ["<leader>", "f", "f"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      // Lint file
      "before": ["<leader>", "f", "l"],
      "commands": ["eslint.executeAutofix"]
    },
    // Code (c)
    {
      // Show documentation of symbol
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    },
    {
      // Code action
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.goToReferences"]
    },
    {
      "before": ["g", "i"],
      "commands": ["editor.action.goToImplementation"]
    },
    {
      "before": ["g", "t"],
      "commands": ["editor.action.goToTypeDefinition"]
    },
    {
      "before": ["g", "d"],
      "commands": ["editor.action.goToDeclaration"]
    },
    {
      // Rename symbol
      "before": ["<leader>", "c", "r"],
      "commands": ["editor.action.rename"]
    },
    {
      // Toggle comment
      "before": ["<leader>", "c", "c"],
      "commands": ["editor.action.commentLine"]
    },
    {
      "before": ["<leader>", "c", "e"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["<leader>", "c", "E"],
      "commands": ["editor.action.marker.prev"]
    },
    // Select (s)
    {
      // Select all
      "before": ["<leader>", "s", "a"],
      "after": ["g", "g", "v", "G"]
    },
    {
      // Select all and yank
      "before": ["<leader>", "s", "A"],
      "after": ["m", "m", "g", "g", "v", "G", "y", "'", "m"]
    },
    {
      // Paste from clipboard
      "before": ["<leader>", "s", "p"],
      "after": ["\"", "+", "p"]
    }
  ],
  "vim.visualModeKeyBindings": [
    // Code (c)
    {
      // Toggle comment
      "before": ["<leader>", "c", "c"],
      "commands": ["editor.action.commentLine"]
    },
    // Select (s)
    {
      // Copy to clipboard
      "before": ["<leader>", "s", "c"],
      "after": ["\"", "+", "y"]
    }
  ],
  "editor.cursorSurroundingLines": 10,
  "editor.fontFamily": "'Cascadia Mono', Consolas, 'Courier New', monospace",
  "azureFunctions.showProjectWarning": false,
  "git.openRepositoryInParentFolders": "never",
  "git.confirmSync": false,
  "remote.autoForwardPortsSource": "hybrid"
}
